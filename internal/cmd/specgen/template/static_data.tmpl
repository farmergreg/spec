{{- define "static_data" }}
// Lookup look up a specification for {{ .CodeGen.CodeGenMetadata.DataType }}
func Lookup({{ .CodeGen.CodeGenMetadata.DataType | ToLower }} {{ .CodeGen.CodeGenMetadata.DataType }}) (Spec, bool) {
	spec, ok := internal{{ .CodeGen.CodeGenMetadata.DataType }}Map[{{ .CodeGen.CodeGenMetadata.DataType | ToLower }}], true
	return spec, ok
}

/*
// All {{ .CodeGen.CodeGenMetadata.DataType }} specifications including import only.
func All{{ .CodeGen.CodeGenMetadata.DataType }}() []Spec {
	return internal{{ .CodeGen.CodeGenMetadata.DataType }}Map
}
*/

var internal{{ .CodeGen.CodeGenMetadata.DataType }}Map = map[{{ .CodeGen.CodeGenMetadata.DataType }}]Spec {
{{- range $key, $value := .CodeGen.CodeGenRecords }}
	{{- $metadata := $value.CodeGenMetadata }}
	{{ $metadata.ConstName }}: {{ ToGoCode $value $.CodeGen.CodeGenMetadata.PackageName }},
{{- end }}
}

// All {{ .CodeGen.CodeGenMetadata.DataType }} specifications including deprecated and import only.
// For convenience, this data is mutable.
// If you require immutable data, please use the specdata package.
var {{ .CodeGen.CodeGenMetadata.DataType }}ListAll = []Spec {
{{- range $key, $value := .CodeGen.CodeGenRecords }}
	{{- $metadata := $value.CodeGenMetadata }}
	internal{{ $.CodeGen.CodeGenMetadata.DataType }}Map[{{ $metadata.ConstName }}],
{{- end }}
}

// All {{ .CodeGen.CodeGenMetadata.DataType }} specifications that are NOT marked import-only.
// For convenience, this data is mutable.
// If you require immutable data, please use the specdata package.
var {{ .CodeGen.CodeGenMetadata.DataType }}ListCurrent = []Spec {
{{- range $key, $value := .CodeGen.CodeGenRecords }}
	{{- $metadata := $value.CodeGenMetadata }}
{{- if not $value.IsImportOnly }}
	internal{{ $.CodeGen.CodeGenMetadata.DataType }}Map[{{ $metadata.ConstName }}],
{{- end }}
{{- end }}
}
{{- end }}