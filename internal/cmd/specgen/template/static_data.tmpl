{{- define "static_data" }}
// Lookup look up a specification for {{ .CodeGen.CodeGenMetadata.DataType }}
func Lookup({{ .CodeGen.CodeGenMetadata.DataType | ToLower }} {{ .CodeGen.CodeGenMetadata.DataType }}) (Spec, bool) {
	spec, ok := internalMap[{{ .CodeGen.CodeGenMetadata.DataType | ToLower }}], true
	return spec, ok
}

// All {{ .CodeGen.CodeGenMetadata.DataType }} specifications INCLUDING ones marked import only.
func All{{ .CodeGen.CodeGenMetadata.DataType }}() []Spec {
	result := make([]Spec,0, len(internalMap))
	for _, v := range internalMap {
		result = append(result, v)
	}
	return result
}

// AllActive{{ .CodeGen.CodeGenMetadata.DataType }} specifications EXCLUDING ones marked import only.
func AllActive{{ .CodeGen.CodeGenMetadata.DataType }}() []Spec {
	return LookupByFilter(func(s Spec) bool {
		return !bool(s.IsImportOnly)
	})
}

// LookupByFilter returns all specifications that match the provided filter function.
func LookupByFilter(filter func(Spec) bool) []Spec {
	result := make([]Spec, 0, len(internalMap))
	for _, v := range internalMap {
		if filter(v) {
			result = append(result, v)
		}
	}
	return result
}

var internalMap = map[{{ .CodeGen.CodeGenMetadata.DataType }}]Spec {
{{- range $key, $value := .CodeGen.CodeGenRecords }}
	{{- $metadata := $value.CodeGenMetadata }}
	{{ $metadata.ConstName }}: {{ ToGoCode $value $.CodeGen.CodeGenMetadata.PackageName }},
{{- end }}
}

{{- end }}